---
# Source: frigate/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: frigate
  namespace: frigate
  labels:
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.4.0
    app.kubernetes.io/instance: frigate
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |
    ffmpeg:
      hwaccel_args: preset-rpi-64-h264
    mqtt:
      host: k8smqtt
      user: "{FRIGATE_MQTT_USER}"
      password: "{FRIGATE_MQTT_PASSWORD}"
    cameras:
      front:
        enabled: True
        ffmpeg:
          inputs:
          - path: rtsp://{FRIGATE_RTSP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.2.71:554/h264Preview_01_sub
            roles:
              - detect
          - path: rtsp://{FRIGATE_RTSP_USERNAME}:{FRIGATE_RTSP_PASSWORD}@192.168.2.71:554/h264Preview_01_main
            roles:
              - record
        detect:
          enabled: True
        rtmp: 
          enabled: False
    detectors:
      coral:
        type: edgetpu
        device: usb
    record:
      enabled: True
      retain:
        days: 3
        mode: motion
      events:
        retain:
          default: 30
          mode: motion
---
# Source: frigate/templates/media-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-media
  labels:
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.4.0
    app.kubernetes.io/instance: frigate
    app.kubernetes.io/managed-by: Helm
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frigate-data
  labels:
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.4.0
    app.kubernetes.io/instance: frigate
    app.kubernetes.io/managed-by: Helm
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "2Gi"
---
# Source: frigate/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frigate
  labels:
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.4.0
    app.kubernetes.io/instance: frigate
    app.kubernetes.io/version: "0.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  loadBalancerIP: ${frigate_ip}
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 5000
      protocol: TCP
      targetPort: http

    - name: rtmp
      port: 1935
      protocol: TCP
      targetPort: rtmp

    - name: rtsp
      port: 8554
      protocol: TCP
      targetPort: rtsp
      
  selector:
    app.kubernetes.io/name: frigate
    app.kubernetes.io/instance: frigate
---
# Source: frigate/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate
  labels:
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.4.0
    app.kubernetes.io/instance: frigate
    app.kubernetes.io/version: "0.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate
      app.kubernetes.io/instance: frigate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frigate
        app.kubernetes.io/instance: frigate
      annotations:
        checksum/configmap: 0b2041ac3d3ff73cd2b2545684e7558f4a982945ca52a866b15135e369bdafe6
    spec:
      containers:
        - name: frigate
          image: "ghcr.io/blakeblackshear/frigate:0.13.2"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: FRIGATE_RTSP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-frigate
                  key: rtsp-password
            - name: FRIGATE_RTSP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secret-frigate
                  key: rtsp-username
            - name: FRIGATE_MQTT_USER
              valueFrom:
                secretKeyRef:
                  name: secret-frigate
                  key: mqtt-user
            - name: FRIGATE_MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-frigate
                  key: mqtt-password
          envFrom:
          volumeMounts:
            - mountPath: /dev/bus/usb
              name: coral-dev
            - mountPath: /config/config.yml
              subPath: config.yml
              name: configmap
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
            - mountPath: /media
              name: media
            - name: dshm
              mountPath: /dev/shm
          resources:
      volumes:
        - name: configmap
          configMap:
            name: frigate
        - name: coral-dev
          hostPath:
            path: /dev/bus/usb
        - name: config
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: frigate-data
        - name: media
          persistentVolumeClaim:
            claimName: frigate-media
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - frigate
