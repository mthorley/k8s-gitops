apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
  namespace: node-red
  labels:
    app: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-red
  template:
    metadata:
      labels:
        app: node-red
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
#        vault.hashicorp.com/agent-inject-status: "update"
#        vault.hashicorp.com/agent-init-first: 'true'
        vault.hashicorp.com/role: 'nodered'
        vault.hashicorp.com/auth-path: "auth/kubernetes"
        vault.hashicorp.com/agent-inject-secret-config: 'secret/nodered'
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "secret/nodered" -}}
          export MQTT_PASSWORD = "{{ .Data.MQTT_PASSWORD }}"
          {{- end }}
#        vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
#        vault.hashicorp.com/client-cert: "/vault/tls/client.crt"
#        vault.hashicorp.com/client-key: "/vault/tls/client.key"
#        vault.hashicorp.com/tls-secret: "vault-tls-client"
    spec:
      serviceAccountName: nodered
      containers:
      - name: node-red
        image: mthorley/node-red:v0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 1880
          name: node-red-ui
        securityContext:
          privileged: true
        volumeMounts:
        - name: node-red-data
          mountPath: /data
        env:
        - name: TZ
          value: Australia/Melbourne
        - name: MQTT_IP
          value: 192.168.3.14
        - name: NODE_RED_ENABLE_PROJECTS
          value: "true"
      volumes:
      - name: node-red-data
        persistentVolumeClaim:
          claimName: node-red-claim
