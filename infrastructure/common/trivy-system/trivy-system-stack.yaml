---
# Source: trivy-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: trivy-operator/templates/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: trivy-operator/templates/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: trivy-operator-trivy-config
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: trivy-operator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
data:
  vulnerabilityReports.scanner: "Trivy"
  configAuditReports.scanner: "Trivy"
---
# Source: trivy-operator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-operator-trivy-config
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
data:
  trivy.imageRef: "ghcr.io/aquasecurity/trivy:0.29.1"
  trivy.mode: "Standalone"
  trivy.severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  trivy.dbRepository: "ghcr.io/aquasecurity/trivy-db"
  trivy.dbRepositoryInsecure: "false"
  trivy.useBuiltinRegoPolicies: "true"
  trivy.supportedConfigAuditKinds: "Workload,Service,Role,ClusterRole,NetworkPolicy,Ingress,LimitRange,ResourceQuota"
  trivy.ignoreUnfixed: "true"
  trivy.timeout: "5m0s"
  trivy.resources.requests.cpu: 100m
  trivy.resources.requests.memory: 100M
  trivy.resources.limits.cpu: 500m
  trivy.resources.limits.memory: 500M
---
# Source: trivy-operator/templates/policies.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: trivy-operator-policies-config
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
data:
# example
# policy.my_policy.kinds: Workload
# policy.my_policy.rego: "package builtin.kubernetes.KSV008
#
# import data.lib.kubernetes
# import data.lib.result
#
# default failHostIPC = false
#
# __rego_metadata__ := {
#	 "id": "KSV008",
#	 "avd_id": "AVD-KSV-0008",
#	 "title": "Access to host IPC namespace",
#	 "short_code": "no-shared-ipc-namespace",
#	 "version": "v1.0.0",
#	 "severity": "HIGH",
#	 "type": "Kubernetes Security Check",
#	 "description": "Sharing the hostâ€™s IPC namespace allows container processes to communicate with processes on the host.",
#	 "recommended_actions": "Do not set 'spec.template.spec.hostIPC' to true.",
#	 "url": "https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline",
#}
#
# __rego_input__ := {
#	 "combine": false,
#	 "selector": [{"type": "kubernetes"}],
# }
#
## failHostIPC is true if spec.hostIPC is set to true (on all resources)
# failHostIPC {
#	 kubernetes.host_ipcs[_] == true
# }
#
#deny[res] {
#	failHostIPC
#	msg := kubernetes.format(sprintf("%s '%s' should not set 'spec.template.spec.hostIPC' to true", [kubernetes.kind, kubernetes.name]))
#	res := result.new(msg, input.spec)
#}"
---
# Source: trivy-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: trivy-operator
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - replicationcontrollers
      - services
      - resourcequotas
      - limitranges
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - list
      - watch
      - get
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
  - apiGroups:
      - apps
    resources:
      - replicasets
      - statefulsets
      - daemonsets
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - vulnerabilityreports
      - exposedsecretreports
      - configauditreports
      - clusterconfigauditreports
      - clusterrbacassessmentreports
      - rbacassessmentreports
      - clustercompliancereports
      - clustercompliancedetailreports
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - clustercompliancereports/status
    verbs:
      - update
---
# Source: trivy-operator/templates/rbac.yaml
# permissions for end users to view configauditreports
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-config-audit-reports-view
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
rules:
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - configauditreports
    verbs:
      - get
      - list
      - watch
---
# Source: trivy-operator/templates/rbac.yaml
# permissions for end users to view exposedsecretreports
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-exposed-secret-reports-view
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
rules:
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - exposedsecretreports
    verbs:
      - get
      - list
      - watch
---
# Source: trivy-operator/templates/rbac.yaml
# permissions for end users to view vulnerabilityreports
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-vulnerability-reports-view
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
rules:
  - apiGroups:
      - aquasecurity.github.io
    resources:
      - vulnerabilityreports
    verbs:
      - get
      - list
      - watch
---
# Source: trivy-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: trivy-operator
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: trivy-operator
subjects:
  - kind: ServiceAccount
    name: trivy-operator
    namespace: trivy-system
---
# Source: trivy-operator/templates/leader_election.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: trivy-operator-leader-election
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: trivy-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
---
# Source: trivy-operator/templates/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: trivy-operator-leader-election
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: trivy-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: trivy-operator
    namespace: trivy-system
---
# Source: trivy-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: trivy-operator
subjects:
  - kind: ServiceAccount
    name: trivy-operator
    namespace: trivy-system
---
# Source: trivy-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: metrics
      port: 80
      targetPort: metrics
      protocol: TCP
  selector:
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
---
# Source: trivy-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivy-operator
  namespace: trivy-system
  labels:
    helm.sh/chart: trivy-operator-0.1.3
    app.kubernetes.io/name: trivy-operator
    app.kubernetes.io/instance: trivy-operator
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: trivy-operator
      app.kubernetes.io/instance: trivy-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trivy-operator
        app.kubernetes.io/instance: trivy-operator
    spec:
      serviceAccountName: trivy-operator
      automountServiceAccountToken: true
      containers:
        - name: "trivy-operator"
          image: "docker.io/aquasec/trivy-operator:0.1.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: OPERATOR_NAMESPACE
              value: "trivy-system"
            - name: OPERATOR_TARGET_NAMESPACES
              value: ""
            - name: OPERATOR_EXCLUDE_NAMESPACES
              value: "kube-system,trivy-system"
            - name: OPERATOR_SERVICE_ACCOUNT
              value: "trivy-operator"
            - name: OPERATOR_LOG_DEV_MODE
              value: "false"
            - name: OPERATOR_SCAN_JOB_TIMEOUT
              value: "5m"
            - name: OPERATOR_CONCURRENT_SCAN_JOBS_LIMIT
              value: "10"
            - name: OPERATOR_SCAN_JOB_RETRY_AFTER
              value: "30s"
            - name: OPERATOR_BATCH_DELETE_LIMIT
              value: "10"
            - name: OPERATOR_BATCH_DELETE_DELAY
              value: "10s"
            - name: OPERATOR_METRICS_BIND_ADDRESS
              value: ":8080"
            - name: OPERATOR_METRICS_FINDINGS_ENABLED
              value: "true"
            - name: OPERATOR_HEALTH_PROBE_BIND_ADDRESS
              value: ":9090"
            - name: OPERATOR_CIS_KUBERNETES_BENCHMARK_ENABLED
              value: "false"
            - name: OPERATOR_VULNERABILITY_SCANNER_ENABLED
              value: "true"
            - name: OPERATOR_VULNERABILITY_SCANNER_SCAN_ONLY_CURRENT_REVISIONS
              value: "false"
            - name: OPERATOR_VULNERABILITY_SCANNER_REPORT_TTL
              value: ""
            - name: OPERATOR_CONFIG_AUDIT_SCANNER_ENABLED
              value: "true"
            - name: OPERATOR_RBAC_ASSESSMENT_SCANNER_ENABLED
              value: "true"
            - name: OPERATOR_CONFIG_AUDIT_SCANNER_SCAN_ONLY_CURRENT_REVISIONS
              value: "false"
            - name: OPERATOR_CLUSTER_COMPLIANCE_ENABLED
              value: "false"
          ports:
            - name: metrics
              containerPort: 8080
            - name: probes
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /readyz/
              port: probes
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz/
              port: probes
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
      securityContext:
        {}
