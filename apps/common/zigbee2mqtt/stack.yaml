---
# Source: zigbee2mqtt/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: zigbee2mqtt-settings
  labels:
    helm.sh/chart: zigbee2mqtt-9.4.2
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/version: "1.19.1"
    app.kubernetes.io/managed-by: Helm
data:
  configuration.yaml: |
    advanced:
      ext_pan_id:
      - 221
      - 221
      - 221
      - 221
      - 221
      - 221
      - 221
      - 222
      homeassistant_discovery_topic: homeassistant
      homeassistant_status_topic: homeassistant/status
      last_seen: ISO_8601
      log_level: debug
      log_output:
      - console
      network_key:
      - 1
      - 3
      - 5
      - 7
      - 9
      - 11
      - 13
      - 15
      - 0
      - 2
      - 4
      - 6
      - 8
      - 10
      - 12
      - 14
      pan_id: 8035
      rtscts: false
    experimental:
      new_api: true
    frontend:
      port: 8080
    homeassistant: true
    mqtt:
      base_topic: zigbee2mqtt
      client_id: zigbee2mqtt
      include_device_information: true
      password: test
      server: mqtt://k8smqtt:1883
      user: test
    permit_join: true
    serial:
      port: /dev/ttyUSB0
---
# Source: zigbee2mqtt/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: zigbee2mqtt-data
  labels:
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: zigbee2mqtt-9.4.2
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "managed-nfs-storage"
---
# Source: zigbee2mqtt/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: zigbee2mqtt
  labels:
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: zigbee2mqtt-9.4.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/instance: zigbee2mqtt
---
# Source: zigbee2mqtt/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zigbee2mqtt
  labels:
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: zigbee2mqtt
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: zigbee2mqtt-9.4.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: zigbee2mqtt
      app.kubernetes.io/instance: zigbee2mqtt
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zigbee2mqtt
        app.kubernetes.io/instance: zigbee2mqtt
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: zigbee2mqtt
          image: "koenkk/zigbee2mqtt:1.24.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
            - name: TZ
              value: Australia/Melbourne
            - name: ZIGBEE2MQTT_DATA
              value: /data
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: zigbee2mqtt-settings
              mountPath: /app/configuration.yaml
              subPath: configuration.yaml
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zigbee2mqtt-data
        - name: zigbee2mqtt-settings
          configMap:
            name: zigbee2mqtt-settings
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - zigbee-controller
